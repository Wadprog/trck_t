service: finance-tracker-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  # environment:
    # COGNITO_USER_POOL_ID: 
    #   Ref: CognitoUserPool

# plugins:
#   - serverless-appsync-plugin

# custom:
#   appSync:
#     name: finance-tracker-api
#     authentication:
#       type: API_KEY
#     schema: schema.graphql

resources:
  Resources:
    # AppSync GraphQL API
    AppSyncApi:
      Type: AWS::AppSync::GraphQLApi
      Properties:
        Name: finance-tracker-api-${self:provider.stage}
        AuthenticationType: API_KEY
        
    # API Key for AppSync
    AppSyncApiKey:
      Type: AWS::AppSync::ApiKey
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        Description: "API Key for Finance Tracker"
        Expires: 1767225600  # 1 year from now (max allowed)
        
    # GraphQL Schema
    AppSyncSchema:
      Type: AWS::AppSync::GraphQLSchema
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        Definition: |
          type Transaction {
            id: ID!
            amount: Float!
            description: String!
            category: String
            date: String!
            type: TransactionType!
            createdAt: String!
            updatedAt: String!
          }

          enum TransactionType {
            INCOME
            EXPENSE
          }

          type Query {
            getTransactions: [Transaction]
            getTransaction(id: ID!): Transaction
          }

          type Mutation {
            createTransaction(input: CreateTransactionInput!): Transaction
            updateTransaction(id: ID!, input: UpdateTransactionInput!): Transaction
            deleteTransaction(id: ID!): Boolean
          }

          input CreateTransactionInput {
            amount: Float!
            description: String!
            category: String
            date: String!
            type: TransactionType!
          }

          input UpdateTransactionInput {
            amount: Float
            description: String
            category: String
            date: String
            type: TransactionType
          }

    # DynamoDB Table
    TransactionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TransactionsTable-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

  Outputs:
    GraphQLApiEndpoint:
      Description: "AppSync GraphQL API Endpoint"
      Value: !GetAtt AppSyncApi.GraphQLUrl
      
    GraphQLApiId:
      Description: "AppSync GraphQL API ID"
      Value: !Ref AppSyncApi
      
    GraphQLApiKey:
      Description: "AppSync API Key"
      Value: !GetAtt AppSyncApiKey.ApiKey
