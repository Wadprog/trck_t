service: finance-tracker-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    COGNITO_USER_POOL_ID: 
      Ref: CognitoUserPool
    COGNITO_USER_POOL_CLIENT_ID:
      Ref: CognitoUserPoolClient

# plugins:
#   - serverless-appsync-plugin

# custom:
#   appSync:
#     name: finance-tracker-api
#     authentication:
#       type: API_KEY
#     schema: schema.graphql

resources:
  Resources:
    # Cognito User Pool
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: finance-tracker-users-${self:provider.stage}
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: true
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
        Schema:
          - Name: email
            AttributeDataType: String
            Required: true
            Mutable: true
          - Name: name
            AttributeDataType: String
            Required: true
            Mutable: true

    # Cognito User Pool Client
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref CognitoUserPool
        ClientName: finance-tracker-client-${self:provider.stage}
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED
        RefreshTokenValidity: 30
        AccessTokenValidity: 60
        IdTokenValidity: 60
        TokenValidityUnits:
          RefreshToken: days
          AccessToken: minutes
          IdToken: minutes

    # AppSync GraphQL API
    AppSyncApi:
      Type: AWS::AppSync::GraphQLApi
      Properties:
        Name: finance-tracker-api-${self:provider.stage}
        AuthenticationType: AMAZON_COGNITO_USER_POOLS
        UserPoolConfig:
          UserPoolId: !Ref CognitoUserPool
          AwsRegion: ${self:provider.region}
          DefaultAction: ALLOW
        
    # GraphQL Schema
    AppSyncSchema:
      Type: AWS::AppSync::GraphQLSchema
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        Definition: |
          type Transaction {
            id: ID!
            amount: Float!
            description: String!
            category: String
            date: String!
            type: TransactionType!
            createdAt: String!
            updatedAt: String!
          }

          enum TransactionType {
            INCOME
            EXPENSE
          }

          type Query {
            getTransactions: [Transaction]
            getTransaction(id: ID!): Transaction
          }

          type Mutation {
            createTransaction(input: CreateTransactionInput!): Transaction
            updateTransaction(id: ID!, input: UpdateTransactionInput!): Transaction
            deleteTransaction(id: ID!): Boolean
          }

          input CreateTransactionInput {
            amount: Float!
            description: String!
            category: String
            date: String!
            type: TransactionType!
          }

          input UpdateTransactionInput {
            amount: Float
            description: String
            category: String
            date: String
            type: TransactionType
          }

    # DynamoDB Table
    TransactionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TransactionsTable-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

  Outputs:
    GraphQLApiEndpoint:
      Description: "AppSync GraphQL API Endpoint"
      Value: !GetAtt AppSyncApi.GraphQLUrl
      
    GraphQLApiId:
      Description: "AppSync GraphQL API ID"
      Value: !Ref AppSyncApi
      
    CognitoUserPoolId:
      Description: "Cognito User Pool ID"
      Value: !Ref CognitoUserPool
      
    CognitoUserPoolClientId:
      Description: "Cognito User Pool Client ID"
      Value: !Ref CognitoUserPoolClient
